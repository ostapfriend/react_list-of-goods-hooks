{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","goods","useState","isVisible","setVisible","isReversed","setIsReversed","isSorted","setIsSorted","sortBy","setSortBy","newGoods","sort","good1","good2","length","localeCompare","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,IAAMC,EAAQF,EAEd,EAAgCG,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA4BN,mBAAS,kBAArC,mBAAOO,EAAP,KAAeC,EAAf,KAsBMC,EAAQ,YAAOV,GAyBrB,OAvBIM,GACFI,EAASC,MAAK,SAACC,EAAOC,GACpB,OAAQL,GACN,IAAK,SACH,OAAOI,EAAME,OAASD,EAAMC,OAE9B,IAAK,WAEH,OAAKV,EAIES,EAAME,cAAcH,GAHlBA,EAAMG,cAAcF,GAK/B,QAAS,OAAO,MAKlBT,GACFM,EAASM,UAIT,sBAAKC,UAAU,MAAf,WACIf,GACA,wBACEgB,KAAK,SACLD,UAAU,cACVE,QAnDiB,kBAAMhB,GAAYD,IAgDrC,mBASDA,GACC,sBAAKe,UAAU,iBAAf,UACE,oBAAIA,UAAU,YAAd,SACIP,EAASU,KAAI,SAACC,GAAD,OACb,oBAEEJ,UAAU,YAFZ,SAIGI,GAHIA,QAQX,sBAAKJ,UAAU,+BAAf,UACE,wBACEA,UAAU,cACVE,QAvEI,kBAAMd,GAAeD,IAwEzBc,KAAK,SAHP,qBAQA,wBACED,UAAU,cACVE,QA7EE,WACZV,EAAU,IACVJ,GAAc,GACdE,GAAY,IA2EFW,KAAK,SAHP,sBASF,sBAAKD,UAAU,+BAAf,UACE,wBACEA,UAAU,cACVE,QAjFS,WACnBZ,GAAY,GACZE,EAAU,WAgFAS,KAAK,SAHP,4BAQA,wBACED,UAAU,cACVE,QApFiB,WAC3BZ,GAAY,GACZE,EAAU,aAmFAS,KAAK,SAHP,2CCtHZI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d5fdca28.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const goods = goodsFromServer;\n\n  const [isVisible, setVisible] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [isSorted, setIsSorted] = useState(false);\n  const [sortBy, setSortBy] = useState('alphabetically');\n\n  const visibleGoodsList = () => setVisible(!isVisible);\n\n  const reverse = () => setIsReversed(!isReversed);\n\n  const reset = () => {\n    setSortBy('');\n    setIsReversed(false);\n    setIsSorted(false);\n  };\n\n  const sortByLength = () => {\n    setIsSorted(true);\n    setSortBy('length');\n  };\n\n  const sortByAlphabetically = () => {\n    setIsSorted(true);\n    setSortBy('alphabet');\n  };\n\n  const newGoods = [...goods];\n\n  if (isSorted) {\n    newGoods.sort((good1, good2): number => {\n      switch (sortBy) {\n        case 'length':\n          return good1.length - good2.length;\n\n        case 'alphabet':\n          // I added \"if\" because if the array is flipped it will not sort correctly\n          if (!isReversed) {\n            return good1.localeCompare(good2);\n          }\n\n          return good2.localeCompare(good1);\n\n        default: return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    newGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      {!isVisible && (\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={visibleGoodsList}\n        >\n          Start\n        </button>\n      )}\n\n      {isVisible && (\n        <div className=\"App__container\">\n          <ul className=\"App__list\">\n            {(newGoods.map((good) => (\n              <li\n                key={good}\n                className=\"App__item\"\n              >\n                {good}\n              </li>\n            )))}\n          </ul>\n\n          <div className=\"App__serviceContainer-button\">\n            <button\n              className=\"App__button\"\n              onClick={reverse}\n              type=\"button\"\n            >\n              Reverse\n            </button>\n\n            <button\n              className=\"App__button\"\n              onClick={reset}\n              type=\"button\"\n            >\n              Reset\n            </button>\n          </div>\n\n          <div className=\"App__sortingContainer-button\">\n            <button\n              className=\"App__button\"\n              onClick={sortByLength}\n              type=\"button\"\n            >\n              Sort by length\n            </button>\n\n            <button\n              className=\"App__button\"\n              onClick={sortByAlphabetically}\n              type=\"button\"\n            >\n              Sort alphabetically\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}